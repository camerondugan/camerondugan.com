<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en"><generator uri="https://jekyllrb.com/" version="4.2.1">Jekyll</generator><link href="https://www.camerondugan.com/feed.xml" rel="self" type="application/atom+xml" /><link href="https://www.camerondugan.com/" rel="alternate" type="text/html" hreflang="en" /><updated>2022-01-21T07:41:59-05:00</updated><id>https://www.camerondugan.com/feed.xml</id><subtitle>This is my Jekyll website that uses Simple.css</subtitle><author><name>Cameron Dugan</name></author><entry><title type="html">Quantum Internet</title><link href="https://www.camerondugan.com/blog/quantum-internet/" rel="alternate" type="text/html" title="Quantum Internet" /><published>2022-01-21T00:00:00-05:00</published><updated>2022-01-21T00:00:00-05:00</updated><id>https://www.camerondugan.com/blog/quantum-internet</id><content type="html" xml:base="https://www.camerondugan.com/blog/quantum-internet/"><![CDATA[<p>The internet has reached a stage that I feel comfortable in calling pretty darn fast. The only problem is that we need to physically wire our devices together in order for them to become useful. Quantum Internet is a theoretical invention where, because of Quantum entaglement, we can enstablish secure, remote connections with other devices without a physical connection to an ISP. Instead, communication would happen at the quantum level, perfectly instant at any distance.</p>

<p>Quantum Internet could efficienty behave as a super quantum computer. Quantum computers are already op, but what if they could network together to poll resources and information.</p>

<p>Why it would be another computer revolution:</p>
<ul>
  <li>Limitless pooled computing for science and for fun</li>
  <li>Users could get paid to improve slow services.</li>
  <li>Actually instant communication globaly</li>
  <li>It sounds cool</li>
</ul>

<p>Why this probably won’t happen:</p>
<ul>
  <li>Quantum Entaglement on purpose at the moment requires close proximity to be established, and it doesn’t last long</li>
</ul>]]></content><author><name>Cameron Dugan</name></author><category term="quantum" /><category term="future" /><category term="thinking" /><summary type="html"><![CDATA[The internet is never finished.]]></summary></entry><entry><title type="html">Podcasts</title><link href="https://www.camerondugan.com/blog/podcasts/" rel="alternate" type="text/html" title="Podcasts" /><published>2022-01-20T00:00:00-05:00</published><updated>2022-01-20T00:00:00-05:00</updated><id>https://www.camerondugan.com/blog/podcasts</id><content type="html" xml:base="https://www.camerondugan.com/blog/podcasts/"><![CDATA[<p>Podcasts are getting quite good recently, so I’ve decided to recommend some podcasts and software I use for accessing them.</p>

<ul>
  <li><a href="https://www.theminimalists.com/podcast/" target="_blank">The Minimalists</a>
    <ul>
      <li>Suit and tie corperate guys talk about a meaningful life with less.</li>
    </ul>
  </li>
  <li><a href="https://safetythirdpod.com/" target="_blank">Safety Third</a>
    <ul>
      <li>Internet science celebrities talk about what they do.</li>
    </ul>
  </li>
  <li><a href="https://tim.blog/podcast/" target="_blank">The Tim Ferris Show</a>
    <ul>
      <li>Tim Ferris explores new and bizzare topics every episode.</li>
    </ul>
  </li>
  <li><a href="https://chartable.com/podcasts/the-wan-show-podcast/episodes" target="_blank">The WAN Show</a>
    <ul>
      <li>Tech news + Linus Media Group behind the scenes.</li>
    </ul>
  </li>
</ul>

<p>All of these podcasts I have on autodownload using: <a href="https://antennapod.org/" target="_blank">Antenna Pod</a> on Android.
You don’t have to try them all, but I highly recommend checking out at least one that you find interesting.</p>]]></content><author><name>Cameron Dugan</name></author><category term="recommendations" /><category term="podcasts" /><category term="rss" /><summary type="html"><![CDATA[Podcasts exist, and if you somehow haven't heard, now you have!]]></summary></entry><entry><title type="html">My Website Is Improving!</title><link href="https://www.camerondugan.com/blog/website-improvements/" rel="alternate" type="text/html" title="My Website Is Improving!" /><published>2022-01-16T00:00:00-05:00</published><updated>2022-01-16T00:00:00-05:00</updated><id>https://www.camerondugan.com/blog/website-improvements</id><content type="html" xml:base="https://www.camerondugan.com/blog/website-improvements/"><![CDATA[<p>You might have noticed that posts now has a few extra little widgets and layout enhancements, and that’s because you’re right!</p>

<p>I’ve been working on improving the styling and layout for a little bit now, and I’m glad to be able to show them off.</p>

<ul>
  <li>
    <p>Because liquid html doesn’t naturally have random number generators, I’ve created some code that very strongly mimics random. (Although reading the code it doesn’t look like it should be random). It must be a bug in the generator, maybe it’s pulling variables in the wrong order and getting modulo of null? Not sure, I’m just glad that it works.</p>
  </li>
  <li>
    <p>I’ve also changed the color scheme to work for both dark and light themes, (I had a bug with my navbar on light mode).</p>
  </li>
  <li>
    <p>The home page is no longer a blerb about myself, but a hub to recent posts</p>
  </li>
  <li>
    <p>Posts have links to other related posts! Adapted from <a href="https://www.mishacreatrix.com/jekyll-related-posts">mishacreatix.com</a>.</p>
  </li>
</ul>

<div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;h2&gt;</span>🪧 Enjoy Reading This?<span class="nt">&lt;/h2&gt;</span>
<span class="nt">&lt;p&gt;</span>Here are some more you might like to read next:<span class="nt">&lt;/p&gt;</span>
    
{% assign maxRelated = 3 %}
{% assign minCommonTags = 1 %}
{% assign maxRelatedCounter = 0 %}
    
<span class="nt">&lt;ul&gt;</span>
	{% for post in site.posts %}
    	{% assign sameTagCount = 0 %}
        {% assign commonTags = '' %}
    
		{% for tag in post.tags %}
        	{% if post.url != page.url %}
            	{% if page.tags contains tag %}
            	{% assign sameTagCount = sameTagCount | plus: 1 %}
            	{% endif %}
            {% endif %}
		{% endfor %}
    
        {% if sameTagCount &gt;= minCommonTags %}
    		<span class="nt">&lt;li&gt;&lt;a</span> <span class="na">href=</span><span class="s">"{{ site.baseurl }}{{ post.url }}"</span><span class="nt">&gt;</span>{{ post.title }}<span class="nt">&lt;/a&gt;&lt;/li&gt;</span>

            {% assign maxRelatedCounter = maxRelatedCounter | plus: 1 %}
            {% if maxRelatedCounter &gt;= maxRelated %}
                {% break %}
            {% endif %}
		{% endif %}
	{% endfor %}
	{% assign newestCount = maxRelated | minus: maxRelatedCounter %}
	{% for post in site.posts limit: newestCount %} 
    		<span class="nt">&lt;li&gt;&lt;a</span> <span class="na">href=</span><span class="s">"{{ site.baseurl }}{{ post.url }}"</span><span class="nt">&gt;</span>{{ post.title }}<span class="nt">&lt;/a&gt;&lt;/li&gt;</span>
	{% endfor %}
		
<span class="nt">&lt;/ul&gt;</span>
</code></pre></div></div>

<p>I knew how to do none of this a month ago, but now I can edit my website to statically generate a ton of stuff.</p>]]></content><author><name>Cameron Dugan</name></author><category term="code" /><category term="website" /><category term="progress" /><summary type="html"><![CDATA[Working with liquid HTML]]></summary></entry><entry><title type="html">Happy New Year</title><link href="https://www.camerondugan.com/blog/2022/" rel="alternate" type="text/html" title="Happy New Year" /><published>2022-01-01T00:00:00-05:00</published><updated>2022-01-01T00:00:00-05:00</updated><id>https://www.camerondugan.com/blog/happy-new-year</id><content type="html" xml:base="https://www.camerondugan.com/blog/2022/"><![CDATA[<p>Hello, just wanting to wish everyone a happy new year! 
To start of the new year, I want to review the software I’m using this year, and mention the software I’m looking forward to using:</p>

<h3 id="software-i-liked-from-2021">Software I Liked From 2021:</h3>

<dl>
  <dt><strong>Feeder on Android</strong></dt>
  <dd>An RSS client for Android, the only feature missing is a synced client for desktop, everything else works great.</dd>
  <dt><strong>SyncThing on Everything</strong></dt>
  <dd>A folder syncing client I wish I tried sooner, I’m currently syncing my home folder across all of my devices with a single exclusion rule of ‘<code class="language-plaintext highlighter-rouge">.*</code>’ to prevent config issues.</dd>
  <dt><strong>Doodle on Android</strong></dt>
  <dd>A FOSS replacement for the Google Pixel line of wallpapers. Even if you own a pixel phone, you can have access to the other lines of pixel wallpapers. Also there’s a ton of customization.</dd>
  <dt><strong>NetGuard on Android</strong></dt>
  <dd>App by app firewall to prevent lazily programmed and insecure apps you want to install from accessing the internet. You can also choose to block internet access in the background. Also can give apps just access to wifi/cellular. A truelly great application, prevents a lot of offline games from loading ads.</dd>
  <dt><strong>VS Code / Code on Linux</strong></dt>
  <dd>An open source version of Visual Studio Code with countless extensions. It is a text editor that works with every programming language, vim mode, and no need for modifying a config file to change settings. Works like a charm. Also has a built in terminal emulator.</dd>
</dl>

<h3 id="software-for-2022">Software For 2022:</h3>

<dl>
  <dt><strong>Obsidian on Everything</strong></dt>
  <dd>A markdown note taking application with backlinking. Backlinking means that if I name a note ‘linux’, anytime I write the word ‘linux’ in another note, it automatically suggests a new link to that note. Plus it can visually graph all of the notes and links to other notes. I plan to use this with SyncThing as an online note-taking replacement.</dd>
  <dt><strong>Tor Browser on Everything</strong></dt>
  <dd>I’ve known the Tor Browser has existed for a while now, but only recently I found out that bridges exist, and can easily be requested from the tor settings tab. Bridges can and often do speed up tor by quite a bit. I always assumed that Tor was just super slow. I will be using Tor a whole lot more with what I’m experiencing as about 4-10x the speed without bridges.</dd>
</dl>

<p>Thanks for reading, let’s have a great 2022!</p>]]></content><author><name>Cameron Dugan</name></author><category term="recommendations" /><category term="android" /><category term="linux" /><summary type="html"><![CDATA[Software I use and will use more]]></summary></entry><entry><title type="html">Why RSS isn’t Mainstream</title><link href="https://www.camerondugan.com/blog/rss/" rel="alternate" type="text/html" title="Why RSS isn’t Mainstream" /><published>2021-12-26T00:00:00-05:00</published><updated>2021-12-26T00:00:00-05:00</updated><id>https://www.camerondugan.com/blog/rss-mainstream</id><content type="html" xml:base="https://www.camerondugan.com/blog/rss/"><![CDATA[<p><abbr title="Really Simple Sindication">RSS</abbr> is an amazing tool for staying up to date across thousands of websites, but something mission critical is missing. There simply isn’t anything to that will recommend new feeds. This makes building up your feed list a hastle, especially if websites don’t list their feed urls anywhere. As I’ve continued to use <abbr title="Really Simple Sindication">RSS</abbr>, I see an increase in it’s value as a tool to create a more decentralized and safer internet.</p>

<p>We need a Spotify, Pandora, or a Facebook for but just for <abbr title="Really Simple Sindication">RSS</abbr> and without the creepy tracking/cyber-stalking. Just a simple website with a recommendation engine built off of other people’s feeds. A good feature on top of the recommendation would be to have a public profile on the site, that you can link your friends to with feeds you recommend to others.</p>

<p>Assuming basic security and encryption practices are put in place, I think this idea has a ton of promise to help a lot of people without being bloated or a menace to privacy. For additional privacy, the website could allow users to choose which feeds to enable as publicly recommended.</p>

<p>Honestly, since the idea isn’t crazy big, and if this doesn’t already exist, I think I’ll take a stab at trying to make this eventually.</p>

<p>If you also want to see this happen or if you know of a website that already does this, please <a href="/contact">contact me</a>.</p>]]></content><author><name>Cameron Dugan</name></author><category term="rss" /><category term="thinking" /><category term="future" /><summary type="html"><![CDATA[What is it missing?]]></summary></entry><entry><title type="html">Linux Scripting</title><link href="https://www.camerondugan.com/blog/bash/" rel="alternate" type="text/html" title="Linux Scripting" /><published>2021-12-20T00:00:00-05:00</published><updated>2021-12-20T00:00:00-05:00</updated><id>https://www.camerondugan.com/blog/linux-scripting</id><content type="html" xml:base="https://www.camerondugan.com/blog/bash/"><![CDATA[<p>Needed something to post, so here’s some tips to make life on the command line a breeze.</p>

<p>If you use linux, odds are you are either using bash or zsh. In your home folder, bash has a file called .bashrc and zsh has a file called .zshrc. Adding aliases to these files is a great way to make simple shortcuts for long and complicated commands. Here are some examples:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>#Git
alias add='git add'
alias commit='git commit'
alias push='git push'
alias pull='git pull'
alias status='git status'
alias log='git log'
alias clone='git clone'
</code></pre></div></div>

<p>Aliases can replace anything you would type into your terminal:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>#Backups
alias bak='timeshift --check &gt;&gt; ~/Logs/timeshift.log'
alias restore='timeshift --restore'
#Scripts
alias longscript='bash ~/Scripts/LongScript.sh'
</code></pre></div></div>

<p>Anything you type into the terminal can be turned into a bash script by typing each command line by line into a text file and saving it as a .sh file. All you need to do to run the file is run <code class="language-plaintext highlighter-rouge">bash scriptName.sh</code></p>

<p>Aliases are great, but automatically running scripts don’t have to be typed on a terminal at all. This can be done with cron, a simple service that can run scripts at specific times, at reboot or login, and every x number of hours/days/minutes.</p>

<p>Install a package from your package manager called cronie or cron. If you can’t find one of those, look up what your distrobution uses, and install that. Next is to make cron run at startup through systemd. The command is <code class="language-plaintext highlighter-rouge">systemctl enable --now cronie</code> (or crond).</p>

<p>Now that crond is setup, running <code class="language-plaintext highlighter-rouge">crontab -e</code> will open a text editor that will allow you to add scripts that run automatically.</p>]]></content><author><name>Cameron Dugan</name></author><category term="code" /><category term="linux" /><category term="commandline" /><summary type="html"><![CDATA[Removing repetitive tasks]]></summary></entry><entry><title type="html">Arduinos</title><link href="https://www.camerondugan.com/blog/arduinos/" rel="alternate" type="text/html" title="Arduinos" /><published>2021-12-02T00:00:00-05:00</published><updated>2021-12-02T00:00:00-05:00</updated><id>https://www.camerondugan.com/blog/arduinos</id><content type="html" xml:base="https://www.camerondugan.com/blog/arduinos/"><![CDATA[<p>I’ve been disapointed with the lack of consumer grade AR displays, and I found myself wondering how hard it could really be to make one.</p>

<p>Turns out, it can be very difficult to get a good image projected into your eye at a comfortable focus. With the help of a magnifying glass, tiny mirror and piece of glass, a 3d printer / glue and cardboard, Raspberry pi / Arduino / microcontroller, and a really tiny display, you can create a small pair of glasses for under ~100 USD that can display basic information. (batteries not included)</p>

<p>The key is pointing the display through a magnifying lens at the correct distance to get the image to be in focus. The image passes from the display to the mirror onto the glass, getting flipped horizontally or vertically twice keeping the original intended image.</p>

<p>Since it’s an Arduino, you could get the glasses to do anything an Arduino could do. Some examples: connect to wifi/bluetooth, send radio/infrared signals, use buttons/switches and LEDs. The limitations are mainly with how much infromation the Arduino can process when rendering the display, the Arduino libraries allow for mainly drawing individual pixels, lines and text. Nothing too fancy, but enough to make a useful AR gadget.</p>]]></content><author><name>Cameron Dugan</name></author><category term="project" /><summary type="html"><![CDATA[Tiny computers that you can program]]></summary></entry><entry><title type="html">Using Flutter</title><link href="https://www.camerondugan.com/blog/using-flutter/" rel="alternate" type="text/html" title="Using Flutter" /><published>2021-09-29T00:00:00-04:00</published><updated>2021-09-29T00:00:00-04:00</updated><id>https://www.camerondugan.com/blog/using-flutter</id><content type="html" xml:base="https://www.camerondugan.com/blog/using-flutter/"><![CDATA[<p><a href="/assets/images/succulent/Plant.png"><img src="/assets/images/succulent/Plant.png" alt="plant" width="200" /></a></p>

<h2 id="lessons">Lessons:</h2>

<ul>
  <li>Find widgets on <a href="https://Pub.dev">pub.dev</a> that fit your project and are <em>null safe</em>, <em>null safety</em> makes your project better and inherently compatible with other <em>null safe</em> projects.
    <ul>
      <li>Learn more about <em>null safety</em> here: <a href="https://dart.dev/null-safety/understanding-null-safety">dart.dev</a></li>
    </ul>
  </li>
  <li>Using <code class="language-plaintext highlighter-rouge">flutter clean</code> is your friend
    <ul>
      <li>Builds occassionally don’t work for no real reason. If this is the case, you can always run the clean command to potentially fix issues.</li>
      <li>If this doesn’t work, you can build it to a different platform/os then back to the original platform.</li>
    </ul>
  </li>
  <li>To my knowledge, you cannot use widgets to communicate with other widgets, I can’t say:
    <div class="language-dart highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">childWidget</span><span class="o">()</span>
  <span class="n">build</span><span class="o">()</span> 
      <span class="k">return</span> <span class="n">widget</span><span class="o">(</span>
          <span class="nl">onTap:</span> <span class="o">()</span> <span class="o">{</span>
              <span class="n">parentWidget</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">item</span><span class="o">);</span>
              <span class="n">setState</span><span class="o">(){};</span>
</code></pre></div>    </div>
    <p>but I can say:</p>
    <div class="language-dart highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">//this is psuedo code</span>
<span class="n">parentWidget</span><span class="o">(){</span>
  <span class="n">mylist</span> <span class="o">=</span> <span class="o">[];</span> 

  <span class="n">Widget</span> <span class="n">childWidget</span><span class="o">(</span><span class="n">list</span><span class="o">){</span>
      <span class="k">return</span> <span class="n">widget</span><span class="o">(</span>
          <span class="nl">onTap:</span> <span class="o">()</span> <span class="o">{</span>
              <span class="n">mylist</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="s">"hello"</span><span class="o">)</span>
              <span class="n">setState</span><span class="o">(){};</span>
          <span class="o">}</span>
  <span class="o">}</span>

  <span class="n">build</span><span class="o">()</span> <span class="o">=&gt;</span> <span class="n">childWidget</span><span class="o">(</span><span class="n">mylist</span><span class="o">);</span>
<span class="o">}</span>
</code></pre></div>    </div>
  </li>
  <li>When using the scaffold widget to make the app, you want to use an indexed stack if you want to also use an animated navigation bar, to let the animation play out, instead of getting cut off when switching contexts.</li>
</ul>

<p>I’ll add binaries to this page shortly, see you next time!</p>]]></content><author><name>Cameron Dugan</name></author><category term="project" /><category term="website" /><category term="code" /><summary type="html"><![CDATA[Making a cross platform app with Flutter]]></summary></entry><entry><title type="html">Weekly Programming - Week 2</title><link href="https://www.camerondugan.com/blog/weekly-programming/2/" rel="alternate" type="text/html" title="Weekly Programming - Week 2" /><published>2021-08-23T00:00:00-04:00</published><updated>2021-08-23T00:00:00-04:00</updated><id>https://www.camerondugan.com/blog/weekly-programming/weekly-challenge-2</id><content type="html" xml:base="https://www.camerondugan.com/blog/weekly-programming/2/"><![CDATA[<p>Programming projects help programmers get better. I’m publicly announcing a project every week on Monday with the goal of helping you get better at programming along with me.</p>

<p>This week’s programming challenge is to make a <em>bot</em> that plays this game.</p>

<p>The Game Of Trust:</p>
<ol>
  <li>Two points are up for grabs.</li>
  <li>Each Player can either choose to share or to steal.</li>
  <li>If Both players steal, nobody gets points.</li>
  <li>If one player steals, that player gets all of the points.</li>
  <li>If both players share, each player gets one point.</li>
</ol>

<p>The <em>bot</em> doesn’t have to play the game well, it just has to be capable of playing against a person and/or another <em>bot</em>.</p>

<p>The rules are as follows:</p>

<ol>
  <li>Complete the challenge to any degree using any language.</li>
  <li>A new challenge will come out every Monday.</li>
  <li>Post the result somewhere by Sunday as proof of completion.</li>
</ol>

<p>There will be scoring as follows:</p>
<ul>
  <li>Participants who tried, get a score of 1 for each project.</li>
  <li>Participants who learned something new get an additional 2 points.</li>
  <li>Participants who didn’t try get a score of 0.</li>
  <li>Participants who copy large chunks of code get their project score cut in half rounded down.</li>
</ul>

<p>Scoring will be entirely done on the honor system. Feel free to include your current score along with your post.
For example: my personal score is 4 at the time of writing.</p>

<p>Take your time, I’m excited to see what we can do!</p>

<p>If you liked this also check out: <a href="../../WeeklyProgramming/1/">Last Week’s Challenge</a>
and 
<a href="../../Dream-Bot/">My Result From Last Week</a></p>]]></content><author><name>Cameron Dugan</name></author><category term="contest" /><category term="code" /><category term="ai" /><summary type="html"><![CDATA[Programming a game player]]></summary></entry><entry><title type="html">Python Dream Bot</title><link href="https://www.camerondugan.com/blog/dream-bot/" rel="alternate" type="text/html" title="Python Dream Bot" /><published>2021-08-18T00:00:00-04:00</published><updated>2021-08-18T00:00:00-04:00</updated><id>https://www.camerondugan.com/blog/dream-bot</id><content type="html" xml:base="https://www.camerondugan.com/blog/dream-bot/"><![CDATA[<p><code class="language-plaintext highlighter-rouge">Python Dream Bot</code> is almost complete. What is the dream bot? I’m glad you asked!</p>

<p><a href="https://www.pexels.com/photo/selective-focus-photo-of-brown-monkey-2213575/"><img src="/assets/images/dream-bot/original1.jpg" alt="original1" width="350" /></a><a href="/assets/images/dream-bot/dream1.png"><img src="/assets/images/dream-bot/dream1.png" alt="dream1" width="350" /></a></p>

<p>The <code class="language-plaintext highlighter-rouge">Python Dream Bot</code> (patent not pending), is an intentionally bad guessing algorithm based off of the logic used for my jekyll post generator (See the costs bot post).</p>

<p>In short it works like this:</p>

<ol>
  <li>It resizes the original picture to user specification.</li>
  <li>It stares at a picture and remember what pixels are near other pixels.
<a href="https://www.pexels.com/photo/cute-corgi-in-front-of-a-laptop-5122188/"><img src="/assets/images/dream-bot/original3.jpg" alt="original3" width="150" /></a></li>
  <li>It creates a copy of the original picture, but removes large sections of the picture.
<a href="/assets/images/dream-bot/intermediate3.png"><img src="/assets/images/dream-bot/intermediate3.png" alt="original3" width="150" /></a></li>
  <li>It looks at whatever pixels exist on the copy and fill in the missing pixels.</li>
</ol>

<p><a href="https://www.pexels.com/photo/cute-corgi-in-front-of-a-laptop-5122188/"><img src="/assets/images/dream-bot/original3.jpg" alt="original3" width="350" /></a><a href="/assets/images/dream-bot/dream3.png"><img src="/assets/images/dream-bot/dream3.png" alt="dream3" width="350" /></a></p>

<p>The previous image was exaggerated to better show the process:</p>

<p><a href="https://www.pexels.com/photo/silhouette-photo-of-person-holding-door-knob-792032/"><img src="/assets/images/dream-bot/original2.jpg" alt="original2" width="350" /></a><a href="/assets/images/dream-bot/dream2.png"><img src="/assets/images/dream-bot/dream2.png" alt="dream2" width="350" /></a></p>]]></content><author><name>Cameron Dugan</name></author><category term="project" /><category term="generation" /><category term="code" /><category term="images" /><summary type="html"><![CDATA[Intentionally Bad Image Manipulation]]></summary></entry><entry><title type="html">costs-bot</title><link href="https://www.camerondugan.com/blog/costs-bot/" rel="alternate" type="text/html" title="costs-bot" /><published>2021-08-16T00:00:00-04:00</published><updated>2021-08-16T00:00:00-04:00</updated><id>https://www.camerondugan.com/blog/costs-bot</id><content type="html" xml:base="https://www.camerondugan.com/blog/costs-bot/"><![CDATA[<p>To ensure I don’t go completely insane, I think I’ll throw on music while I work to help my morale last long enough to start a conversation, but not too much as to give people headaches.</p>

<p>Programming projects help programmed, it’s still unfinished and it’s definitely some more than 1 USD to make the transaction, so I lowered the “fuel” on the transaction. Turns out, I had lowered it to the extent where I avoid thinking about it. The only way I’ve found a way to procrastination:
	1. Make a template for an average day
	1. Plan out specific things I’ll work on with estimated duration.
	1. ???
	1. Profit/Actually get things done</p>

<p>Maybe I can avoid procrastination:
	1. Make a template. Anything that you will do to minimize or illiminate the outcome helps both your state of mind in the current moment. Sometimes we don’t even notice this feeling. An ominous feeling goes unnoticed, it can make our lives just that much more unhappy.</p>

<p>If you decide that you aren’t looking forward to.</p>

<p>Take a minute and think about hard tasks I could try to streamline my calendar/task system, but I’m notorious for using that after the 30 second mark, you’re probably just procrastinating.</p>

<p>Speaking of procrastination, this blog post is a way for me to go do the things I don’t want to spend more than others.</p>

<p>Sometimes I’ll add a new feature into an item only to find out that maybe that feature should be it’s own separate item.</p>

<p>Every programmed, it’s still unfinished and it’s definitely some more than 1 USD to make the transaction, so I lowered the “fuel” on the transaction. It took about a month before it became profitable to somebody to look at my transaction. It took about a month before it became profitable to somebody to look at my transaction. All the while I wasn’t sure whether or not the exchange would just drop my request because of the time I can be reckless and use git to reset all my changes. Just going for it is really refreshing after such a long period of inaction.</p>

<p><img src="/assets/gifs/devlog/space_0.gif" alt="picture" /></p>

<p>Right off the bat I went for a top-down puzzle game design because a type of game that I really enjoy. This meant making a top down view of the player, and making it move, setting up collision and boundaries… All of the usual stuff. At my current point in the tech industry. Every industry, but definitely confusing. Intentional programming errors are everywhere, it’s your job to use them to your advantage to reach the end.</p>

<p>The top left-most tile.</p>
<ol>
  <li>I created more rooms and realized where the fun of the game continues. Another quirk I’ve found in my development is sometimes I’ll add a new feature into an item only to find out that maybe that feature should be it’s own separate item.</li>
</ol>

<p>Every programmer has used a development is sometimes I’ll add a new feature into an item only to find out that maybe that feature should be it’s own separate item.</p>

<p>Every programmers get better. I’m going to be <em>Text Generation</em>. Generate any kind of text, it has to be random to some degree. Searching for algorithms online is greatly encouraged.</p>

<ol>
  <li>Complete the task won’t get done. The second issue is that I don’t know that I think about what you might be <code class="language-plaintext highlighter-rouge">overwhelm</code> can control you here as well. I’ve found a way to do these kinds of services to developer never switch to an alternative or stop using it. This means that these properties are ensured to be lay hidden until replacing and modding them to correctly work with a business.</li>
</ol>

<p>That last point extends past software or a single industry has its dirty secrets. These secrets are worse-off being kept rather than freed. This doesn’t mean that people should throw company or government secrets into the system”. This should allow for some nuance between completing the rooms fast and strategizing when to slow down.</p>

<p>I also plan to have more rooms and realized where the fun of the game continues. Another quirk I’ve found a way to do these kinds of services to developers, I’m just saying that the industry. Every industry has an inherent need to manipulate the general population to their direct or indirect benefit. Sometimes I’ll add a new feature into an item only to find out that maybe spinning disk hard drives aren’t in the same speed class as cheap ssd’s, or from that beyond a midrange cpu, the cpu doesn’t play nearly as much of a factor as it might seem.</p>

<p>There’s no incentivised to make sure that the effort that goes into the final game.</p>

<p>What I actually got done:</p>
<ol>
  <li>I fixed a major bug wi</li>
</ol>

<p>Generated by Cameron Dugan’s Jekyll Post Generator</p>]]></content><author><name>Cameron Dugan</name></author><category term="generation" /><category term="code" /><category term="ai" /><summary type="html"><![CDATA[of programming]]></summary></entry><entry><title type="html">Weekly Programming - Week 1</title><link href="https://www.camerondugan.com/blog/weekly-programming/1/" rel="alternate" type="text/html" title="Weekly Programming - Week 1" /><published>2021-08-16T00:00:00-04:00</published><updated>2021-08-16T00:00:00-04:00</updated><id>https://www.camerondugan.com/blog/weekly-programming/weekly-challenge-1</id><content type="html" xml:base="https://www.camerondugan.com/blog/weekly-programming/1/"><![CDATA[<p>Programming projects help programmers get better. I’m going to start publicly doing some to increase specific skills I want to work on.</p>

<p>This week’s theme is going to be <em>Image Generation</em>. You can create a program that takes in a series of images, and outputs an image based on those previous works. You could also create a program that fills in missing/transparent sections of an image.</p>

<p>Hopefully these ideas help you create wacky results.</p>

<p>The rules are as follows:</p>

<ol>
  <li>Complete the task to any degree using any language.</li>
  <li>A new task will come out every Monday.</li>
  <li>Post the result somewhere by Sunday as proof of completion.</li>
</ol>

<p>There will be scoring as follows:</p>
<ul>
  <li>Participants who tried, get a score of 1 for each project.</li>
  <li>Participants who learned something new get an additional 2 points.</li>
  <li>Participants who didn’t try get a score of 0.</li>
  <li>Participants who copy large chunks of code get their project score cut in half rounded down.</li>
</ul>

<p>Scoring will be entirely done on the honor system. Feel free to include your current score along with your post.
Example: My current score is 1.</p>

<p>Take your time, I’m excited to see what we can do!</p>]]></content><author><name>Cameron Dugan</name></author><category term="contest" /><category term="code" /><category term="generation" /><category term="images" /><summary type="html"><![CDATA[Programming art generators]]></summary></entry><entry><title type="html">Bee Movie</title><link href="https://www.camerondugan.com/blog/bee-movie/" rel="alternate" type="text/html" title="Bee Movie" /><published>2021-08-12T00:00:00-04:00</published><updated>2021-08-12T00:00:00-04:00</updated><id>https://www.camerondugan.com/blog/bee</id><content type="html" xml:base="https://www.camerondugan.com/blog/bee-movie/"><![CDATA[<p>t Honex, we’re bee.</p>
<ul>
  <li>Sting
a new helmet to me!</li>
  <li>What 0900 at ther car!</li>
  <li>A little bit out!
So be a be gonna takes an amusement packing to lose.</li>
  <li>No, it’s a Korean deli on Earth.
You know what it?
I’m gonna takes?</li>
  <li>Hey, you died. Make to, bears an animals?
Trying whole like it was a way out. Stellar!</li>
  <li>Bye.
It’s no talk to be back.
Yeah. Gusty.
Wow.
This close?
Ken, coolest. What’s a lot of it got a must a cours?
Nah.
Bees an all depends
on what week? You got to.
Oh, my!</li>
  <li>Bee!
Step to bed.
We’re me tension a little scary.
We’re bee, pour latest an open something balloon a sure this close
that…
…kind of the side.</li>
  <li>Don’t talking!</li>
  <li>What’s an open sometime. This collen
Jock. That’s justed,
scent-adjust me tellar!</li>
  <li>You
don’t believe wonder we tellar!
Wow! This like
outside, kid.
It’s life.
You’re think.</li>
  <li>Hi, Jock. This could you see pollen
that?
Maybe they
nevery funny. If you wants to that ever see? Folds ourjob every small the law number seven,
lint where. More honey,
bees, ho</li>
</ul>]]></content><author><name>Cameron Dugan</name></author><category term="generation" /><category term="ai" /><category term="code" /><summary type="html"><![CDATA[Bee]]></summary></entry><entry><title type="html">Arbidor</title><link href="https://www.camerondugan.com/blog/arbidor/" rel="alternate" type="text/html" title="Arbidor" /><published>2021-08-11T00:00:00-04:00</published><updated>2021-08-11T00:00:00-04:00</updated><id>https://www.camerondugan.com/blog/arbidor</id><content type="html" xml:base="https://www.camerondugan.com/blog/arbidor/"><![CDATA[<p>Arbidor is a short game I programmed, it’s still unfinished and it’s definitely confusing. Intentional programming errors are everywhere, it’s your job to use them to your advantage to reach the end.</p>

<p>Watch out, your battery drains while you play. Collect batteries to replenish your battery! The top left features a reset indicator, it lets you know when the game attempts a partial reset.</p>

<p>The top left indicates when the level will automatically reset.
The top Right indicates when the whole game resets.</p>

<dl>
  <dt>Controls</dt>
  <dd>Arrows to move</dd>
  <dd>x/z to interact or fully reset the level at the cost of battery</dd>
  <dd>Most controllers are supported</dd>
</dl>

<p><button onclick="window.location.href='../../arbidor/arbidor.html';">Click To Play Arbidor</button></p>

<p>Compiles to web, Windows, Mac, and Linux</p>]]></content><author><name>Cameron Dugan</name></author><category term="project" /><category term="game" /><category term="gamedev" /><category term="website" /><summary type="html"><![CDATA[A very short puzzle game that crashes when you win]]></summary></entry><entry><title type="html">Weekly Programming - Week 0</title><link href="https://www.camerondugan.com/blog/weekly-programming/0/" rel="alternate" type="text/html" title="Weekly Programming - Week 0" /><published>2021-08-09T00:00:00-04:00</published><updated>2021-08-09T00:00:00-04:00</updated><id>https://www.camerondugan.com/blog/weekly-programming/weekly-challenge</id><content type="html" xml:base="https://www.camerondugan.com/blog/weekly-programming/0/"><![CDATA[<p>Programming projects help programmers get better. I’m going to start publicly doing some to increase specific skills I want to work on.</p>

<p>Although I suspect nobody will read this, I want you to participate to whatever degree you feel is comfortable. Here are the rules:</p>

<p>This week’s theme is going to be <em>Text Generation</em>. Generate any kind of text, it has to be random to some degree. Searching for algorithms online is greatly encouraged.</p>

<ol>
  <li>Complete the task to any degree using any language.</li>
  <li>A new task will come out every Monday.</li>
  <li>Post the result somewhere by Sunday as proof of completion.</li>
</ol>

<p>There will be scoring as follows:</p>
<ul>
  <li>Participants who tried get a score of 1 for each project.</li>
  <li>Participants who learned something new get an additional 2 points.</li>
  <li>Participants who didn’t try get a score of 0.</li>
  <li>Participants who copy large chunks of code get their project score cut in half rounded down.</li>
</ul>

<p>Scoring will be entirely done on the honor system. Feel free to include your current score along with your post.</p>

<p>Take your time, quality is way better than quantity, and I’m excited to see what we can do!</p>]]></content><author><name>Cameron Dugan</name></author><category term="code" /><category term="difficulty" /><category term="contest" /><summary type="html"><![CDATA[Programming for the sake of programming]]></summary></entry><entry><title type="html">Dev Log 3</title><link href="https://www.camerondugan.com/blog/devlog-3/" rel="alternate" type="text/html" title="Dev Log 3" /><published>2021-06-09T00:00:00-04:00</published><updated>2021-06-09T00:00:00-04:00</updated><id>https://www.camerondugan.com/blog/devlog-3</id><content type="html" xml:base="https://www.camerondugan.com/blog/devlog-3/"><![CDATA[<p><a href="/assets/gifs/devlog/space_1.gif"><img src="/assets/gifs/devlog/space_1.gif" alt="picture" /></a></p>

<p>I want to talk about what I did yesterday for the game.</p>

<p>What I wanted to get done:</p>
<ol>
  <li>Make the creatures move in different ways when player moves.</li>
  <li>Start making some starting rooms that will make it into the final game.</li>
</ol>

<p>What I actually got done:</p>
<ol>
  <li>I fixed a major bug with activating dialogue with NPCs.
    <ul>
      <li>For NPCs that are bigger than one tile, it failed to recognize anything other than bumping into the top left-most tile.</li>
    </ul>
  </li>
  <li>I created more rooms and realized where the fun of the game is: movement and puzzles. I know that sounds dumb, of course the fun is in moving around and doing things, but seriously, I forgot and was putting way too much focus on dialogue and other ridiculous stuff.</li>
  <li>I also changed the color palate based on how far the player was in the game.</li>
</ol>

<p><a href="/assets/gifs/devlog/space_1.gif"><img src="/assets/gifs/devlog/space_2.gif" alt="picture" /></a></p>

<p>What I want to do with the game from here:</p>

<p>I think the game could be quite interesting with a time mechanic tied into the corruption mechanic.</p>

<p>My idea is to have corruption stay if the player doesn’t finish the room in a certain amount of time. Otherwise, the corruption will get reset by “the system”. This should allow for some nuance between completing the rooms fast and strategizing when to slow down.</p>

<p>I also plan to have more rooms added into the game.</p>]]></content><author><name>Cameron Dugan</name></author><category term="project" /><category term="code" /><category term="gamedev" /><category term="progress" /><summary type="html"><![CDATA[Another devlog for my unnamed game.]]></summary></entry><entry><title type="html">Dev Log 2</title><link href="https://www.camerondugan.com/blog/devlog-2/" rel="alternate" type="text/html" title="Dev Log 2" /><published>2021-06-07T00:00:00-04:00</published><updated>2021-06-07T00:00:00-04:00</updated><id>https://www.camerondugan.com/blog/devlog-2</id><content type="html" xml:base="https://www.camerondugan.com/blog/devlog-2/"><![CDATA[<p>Welcome back, I have finally decided on a direction for this game. You are a robot in a post human society and something isn’t right. Reality is slipping. Nothing from your sensors are to be trusted. To make things worse, red creatures seem to be making things worse.</p>

<p><a href="/assets/gifs/devlog/space_0.gif"><img src="/assets/gifs/devlog/space_0.gif" alt="picture" /></a></p>

<p>Bugs fixed:</p>
<ol>
  <li>Weird player movement animation when one player bumps into a wall, and another player doesn’t.</li>
</ol>

<p>Other things:</p>
<ol>
  <li>Added the red creatures.</li>
  <li>Made meditating robot float up and down</li>
</ol>

<p>Things to do tommorrow:</p>
<ol>
  <li>Creatures move in different ways when player moves</li>
  <li>Start making some starting levels that will hopefully make it into the final game</li>
</ol>]]></content><author><name>Cameron Dugan</name></author><category term="project" /><category term="code" /><category term="gamedev" /><category term="progress" /><summary type="html"><![CDATA[A devlog for my unnamed game.]]></summary></entry><entry><title type="html">Dev Log 1</title><link href="https://www.camerondugan.com/blog/devlog-1/" rel="alternate" type="text/html" title="Dev Log 1" /><published>2021-06-02T00:00:00-04:00</published><updated>2021-06-02T00:00:00-04:00</updated><id>https://www.camerondugan.com/blog/devlog-1</id><content type="html" xml:base="https://www.camerondugan.com/blog/devlog-1/"><![CDATA[<p>Hi all, I want to retro-actively share my efforts to make  a game with pico8. My goal is to publish on itch.io or on my own website by the end of the year. I suspect its possible to finish the game well before then, but I know I’ll end up taking my time.</p>

<p><a href="/assets/images/devlog/space_1.png"><img src="/assets/images/devlog/space_1.png" alt="picture" /></a></p>

<p>Currently, I’m throwing ideas at the wall and seeing what sticks. Now that I think about it, I’ve been doing that since the beginning of the project. What I like about this process is that it’s always straight forward and it makes deciding what to do a whole lot easier. Although, I still have to be careful and think about what I’m doing. But, most of the time I can be reckless and use git to reset all my changes. Just going for it is really refreshing after such a long period of inaction.</p>

<p><a href="/assets/images/devlog/space_0.png"><img src="/assets/images/devlog/space_0.png" alt="picture" /></a></p>

<p>Right off the bat I went for a top-down puzzle game design because a type of game that I really enjoy. This meant making a top down view of the player, and making it move, setting up collision and boundaries… All of the usual stuff. At my current point in the development I already feel like there are things about the game I am not willing to share. A few surprises perhaps. Hopefully they catch some veteran players of guard while still being fun for new players as well. I’ve found that I have a heavy bias for early difficulty, so I’m doing my best to slow my roll this time around and deliberately bringing up the difficulty as the game continues. Another quirk I’ve found in my development is sometimes I’ll add a new feature into an item only to find out that maybe that feature should be it’s own separate item.</p>]]></content><author><name>Cameron Dugan</name></author><category term="project" /><category term="code" /><category term="gamedev" /><category term="progress" /><summary type="html"><![CDATA[A devlog for my unnamed game.]]></summary></entry><entry><title type="html">Complexity</title><link href="https://www.camerondugan.com/blog/complexity/" rel="alternate" type="text/html" title="Complexity" /><published>2021-05-22T00:00:00-04:00</published><updated>2021-05-22T00:00:00-04:00</updated><id>https://www.camerondugan.com/blog/complexity</id><content type="html" xml:base="https://www.camerondugan.com/blog/complexity/"><![CDATA[<p>The growing complexity in computer science and electronics influences everyone.</p>

<p>Computer manufacturers use the complexity of their product to mislead their consumers. They emphasize the cpu in their products and point out how fast their spinning disk hard drive is. This misdirects the consumer from reality. The customer is pushed away from realizing that maybe spinning disk hard drives aren’t in the same speed class as cheap ssd’s, or from that beyond a midrange cpu, the cpu doesn’t play nearly as much of a factor as it might seem.</p>

<p>There’s no incentive to help the consumer understand what they are doing. If anything, the incentive is to mislead consumers. And this practice misleading happens in most industries with complex products and services. Complexity shouldn’t be this big of a barrier to effective consumer decisions. Computer sale could be put down to a simple 4-5 pointers based on what the consumer wants to do with it. 
Something like an important component graph:</p>

<p>moving large files -&gt; ssd
media creation -&gt; ssd gpu cpu
word processing/mail/videochat -&gt; anything/chromebook
gaming -&gt; gpu cpu ram ssd</p>

<p>Obviously, I don’t know everything here, but I think a sticker or poster with this kind of information at computer stores would save a lot of frustration with hardware. Many customer’s computer angst starts before they turn on their own computer.</p>

<p>This kind of abuse of customer trust is too prevalent in the tech industry.</p>

<p>Other industries that I’m aware of similar practices:</p>
<ul>
  <li>Consumer audio</li>
  <li>Healthy food companies</li>
  <li>News, particularly political news</li>
  <li>Research publications</li>
  <li>Nevermind, pretty much every industry, but definitely some more than others.</li>
</ul>

<p>Sometimes I think that information just moves too fast with no filters for quality. As the complexity of the world increases, the skills required to decern between quality information and garbage information disappears. Quality information now has to desguise itself as fluff to be seen by anyone. Kind of makes me think that disconnecting entirely is becoming the only option.
Hopefully there will be a new service that restricts both speed and quantity of information to insure a reasonable quality of information. Just enough to start a conversation, but not too much as to give people headaches.</p>]]></content><author><name>Cameron Dugan</name></author><category term="thinking" /><category term="hardware" /><category term="code" /><summary type="html"><![CDATA[How complexity influences people.]]></summary></entry><entry><title type="html">Hidden Costs</title><link href="https://www.camerondugan.com/blog/hidden-costs/" rel="alternate" type="text/html" title="Hidden Costs" /><published>2021-05-21T00:00:00-04:00</published><updated>2021-05-21T00:00:00-04:00</updated><id>https://www.camerondugan.com/blog/hidden-costs</id><content type="html" xml:base="https://www.camerondugan.com/blog/hidden-costs/"><![CDATA[<p>Every programmer has used a development stack. A framework, an API, or maybe a template. Anything that makes money with each use is incentivised to make sure that you, as the developer never switch to an alternative or stop using it. This means that they are also incentivised to make sure that the API becomes deeply implanted into the system that you make. Maybe its a weird timing quirk, or an unexplainable fringe bug. The last quirk of truly evil systems, is that these properties are ensured to be lay hidden until replacing the product becomes costly or timely. I’m not saying that it’s immoral to write or promote these kinds of services to developers, I’m just saying that the effort that goes into them and the effort that goes into replacing and modding them to correctly work with a business can slow or destroy a business.</p>

<p>That last point extends past software or a single industry. Every industry has an inherent need to manipulate the general population to their direct or indirect benefit. Sometimes this means staying quiet about an issue and pressuring internal actors to be quiet or else. Other times, this means that the industry changes the focus of outrage on to something inconsequential. Uprooting these lies is essential for improving society.</p>

<p>Each industry has its dirty secrets. These secrets can either be critical to business or a big enough PR disaster to heavily cripple that business. Hopefully most of these secrets are nothing to worry about. To protect future business and the better interest in future human civilization, I herby heavily promote whistle-blowing in areas where secrets are worse-off being kept rather than freed. This doesn’t mean that people should throw company or government secrets into the public spotlight just to spite their bureaucratic overlords. Instead only when information that is exposed directly and continually benefits humanity as a whole while dealing minimal damage to the organization in question.</p>

<p>Those have been my thoughts for today. Went off on a tangent, but hopefully it was still interesting.</p>]]></content><author><name>Cameron Dugan</name></author><category term="rant" /><category term="code" /><category term="thinking" /><summary type="html"><![CDATA[Examples and generalizations of how systems disguise their motives.]]></summary></entry><entry><title type="html">The Overwhelm</title><link href="https://www.camerondugan.com/blog/overwhelm/" rel="alternate" type="text/html" title="The Overwhelm" /><published>2021-04-18T00:00:00-04:00</published><updated>2021-04-18T00:00:00-04:00</updated><id>https://www.camerondugan.com/blog/overwhelm</id><content type="html" xml:base="https://www.camerondugan.com/blog/overwhelm/"><![CDATA[<p>Everyone has some amount of this feeling. An ominous feeling of almost guilt, or fear of what’s up ahead. Whether its a homework assignment, a test, or maybe an important meeting, a flight you can’t miss, or really anything that you aren’t looking forward to.</p>

<p>Take a minute and think about what you might be <code class="language-plaintext highlighter-rouge">overwhelmed</code> with at the current moment. Sometimes we don’t even notice this feeling, almost like it has integrated itself into our lives. Ultimately if this feeling goes unnoticed, it can make our lives just that much more unhappy.</p>

<p>If you decide that you are feeling <code class="language-plaintext highlighter-rouge">overwhelmed</code>, the fastest way to overcome that feeling is to make a battleplan. It might not be easy, but I guarantee that a good plan will help. Knowing what you will do to minimize or illiminate the outcome helps both your state of mind in the current moment and you’ll make a more informed decision when that dreaded moment eventually comes.</p>

<p>Take the flipside of <code class="language-plaintext highlighter-rouge">overwhelm</code>. Instead of something that you wish wouldn’t happen, how about something that you wish will happen. Is there something that you’ve always wanted to do? Mabye a skill you’ve always wanted to learn. Whatever you want to do, the feeling of <code class="language-plaintext highlighter-rouge">overwhelm</code> can control you here as well. It can paralyze you, stop you from taking even the tiny steps towards the future you want.</p>

<p>I’m not saying I’m an expert, or even good at managing the <code class="language-plaintext highlighter-rouge">overwhelm</code>. It’s just that I have a lot of experience with it. It’s one of those things that build while you don’t manage it. Do yourself a favor and ask yourself where you see it appearing or growing and make that battle plan.</p>

<p>Have a better day :)</p>]]></content><author><name>Cameron Dugan</name></author><category term="mental-health" /><category term="productivity" /><category term="thinking" /><summary type="html"><![CDATA[Conquering the unknown]]></summary></entry><entry><title type="html">Procrastination and Motivation</title><link href="https://www.camerondugan.com/blog/procrastination/" rel="alternate" type="text/html" title="Procrastination and Motivation" /><published>2021-04-17T00:00:00-04:00</published><updated>2021-04-17T00:00:00-04:00</updated><id>https://www.camerondugan.com/blog/procrastination</id><content type="html" xml:base="https://www.camerondugan.com/blog/procrastination/"><![CDATA[<p>Motivation is overrated.</p>

<p>Something that I need to remember is that reflection has it’s limitations. It’s limitations being that after the 30 second mark, you’re probably just procrastinating.</p>

<p>Speaking of procrastination, this blog post is a way for me to take my mind off of the stuff I have to do in the next two days. I’ve got a lot. I tend to have problems with tasks when I don’t like doing it to the extent where I avoid thinking about it. The only way I’ve found a way to do these kinds of things is to try to make it something I automatically do without thinking. Usually by tacking it on the end of something I already do every day.</p>

<p>The two issues with this. If I don’t do that thing that triggers the automatic action, the task won’t get done. The second issue is that I don’t know that I didn’t do it. 
My goal here is to think by writing and get to a solution that works. A secondary goal is to get better at writing, so I eventually don’t hesitate to make a post.</p>

<p>To mitigate the issue of not wanting to think about hard tasks I could try to streamline my calendar/task system, but I’m notorious for using that as a way to procrastinate. Maybe it’s a motivational issue?</p>

<p>Maybe… Or, I could try to solve the lack of motivation with some kind of reward? No… I can’t think of anything that would work as a reward. In order for there to be a reward, rules must be put in place.</p>

<p>Maybe adding some rules to my life would make it more structured and meaningful. It’s worth a shot. Time to think of some examples, I guess.</p>

<p>Layout: Problem: Solution by adhering a rule.</p>

<ol>
  <li>Distraction: Reduce distracting entertainment by removing things that make me start watching</li>
  <li>Distraction/Procrastination:
    <ol>
      <li>Make a template for an average day</li>
      <li>Plan out specific things I’ll work on with estimated duration.</li>
      <li>???</li>
      <li>Profit/Actually get things done</li>
    </ol>
  </li>
</ol>

<p>Maybe I can avoid procrastination by forcing a habit of doing everything as early as I can, while changing my environment to help reduce distractions.</p>

<p>To ensure I don’t go completely insane, I think I’ll throw on music while I work to help my morale last long enough to get everything done.</p>

<p>Alrighty, I guess it’s time for me to go do the things I don’t want to do. Cya, have a great day!</p>]]></content><author><name>Cameron Dugan</name></author><category term="productivity" /><category term="mental-health" /><category term="difficulty" /><summary type="html"><![CDATA[A note to self]]></summary></entry><entry><title type="html">My Crypto Adventures</title><link href="https://www.camerondugan.com/blog/crypto/" rel="alternate" type="text/html" title="My Crypto Adventures" /><published>2021-04-05T00:00:00-04:00</published><updated>2021-04-05T00:00:00-04:00</updated><id>https://www.camerondugan.com/blog/my-crypto-adventures</id><content type="html" xml:base="https://www.camerondugan.com/blog/crypto/"><![CDATA[<p>Hello and welcome to my second ever blog post…</p>

<p>Background:
	I had saved up a bunch of crypto that I had mined in my free time over the course of about 10 or so months. Then I decided that I didn’t like having all of my money in bitcoin, so I decided to use a coin exchange to convert some of it to etherium. Enter: my mistake.</p>

<p>I had decided that I didn’t want to spend more than 1 USD to make the transaction, so I lowered the “fuel” on the transaction. Turns out, I had lowered it to the point where nobody would take the transaction. It took about a month before it became profitable to somebody to look at my transaction. All the while I wasn’t sure whether or not the exchange would just drop my request because of the time it was taking. Luckily, nothing bad happened and I have my crypto back in my wallet.</p>

<p>It was really unpleasant looking at that 0 balance for a month.</p>

<p>Anyways hope you enjoyed and have a wonderful day.</p>]]></content><author><name>Cameron Dugan</name></author><category term="crypto" /><category term="bitcoin" /><category term="etherium" /><summary type="html"><![CDATA[Misadventures in crypto]]></summary></entry></feed>